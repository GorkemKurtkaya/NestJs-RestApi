import { Controller, Post, Query } from '@nestjs/common';
import { detectSafeSearch } from 'C:\\Users\\Görkem\\nodejsnnudedetect\\nudedeneme.js'; // Node.js dosyası
import { ImageAnnotatorClient } from '@google-cloud/vision'; // Google Cloud Vision API'yi 

@Controller('image-analysis')
export class ImageAnalysisController {
  @Post()
  async analyzeImage(@Query('imageUri') imageUri: string) {
    try {
      const client = new ImageAnnotatorClient(); // ImageAnnotatorClient oluştur
      await detectSafeSearch(imageUri); // Node.js kodu
      return 'Safe search analysis completed'; // İşlem başarılı olduysa başarılı mesajını döndür
    }
     catch (error) {
      throw new Error(`Error analyzing image: ${error.message}`);
    }
  }
}

******

import { Controller, Post, Query } from '@nestjs/common';
import { detectSafeSearch } from 'C:\\Users\\Görkem\\nodejsnnudedetect\\nudedeneme.js'; // Node.js dosyası
import { ImageAnnotatorClient } from '@google-cloud/vision'; // Google Cloud Vision API'yi 

@Controller('image-analysis')
export class ImageAnalysisController {
  @Post()
  async analyzeImage(@Query('imageUri') imageUri: string) {
    try {
      const client = new ImageAnnotatorClient();
      const safeSearchResult = await detectSafeSearch(imageUri);
      const racyLikelihood = safeSearchResult.racy;
  
      let message = 'Safe search analysis completed';
      let warning = "*******UYARI UYGUNSUZ İÇERİK*******"
      let onayligorsel="GÖRSEL UYGUN"
      let action = "MODERATION REQUIRED"
      let racyRating = ''; // Racy derecesini temsil eden yeni bir alan
  
      if (racyLikelihood === 'VERY_LIKELY' || racyLikelihood === 'LIKELY') {
        return(warning)
        
        ////////message = 'Uygunsuz içerik algılandı!';
        ////////racyRating = 'VERY_LIKELY';
      } else {
        return(onayligorsel)
      }
  
      // HTTP yanıtı olarak JSON nesnesini döndür
      return {
        message: message,
        safeSearchResult: safeSearchResult,
        racyRating: racyRating // Yeni eklenen racyRating alanı
      };
    } catch (error) {
      throw new Error(`Error analyzing image: ${error.message}`);
    }
  }
  
}